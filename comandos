// no relatorio.html


        <div class="row justify-content-between">
            <div id="foto" class="col-8">
                <div class="media">
                    <div id="imgUser"></div>
                    <h5 class="mt-0">
                        <br>
                        <p id="user"></p>
                    </h5>
                </div>
            </div>
            <div class="col-4 text-right">
                <button class="btn btn-primary" onclick="logout()">logout</button>
            </div>
        </div>


//carregar a imagem e dados


    let jsonUser = JSON.parse(userTxt);

    document.getElementById("user").innerHTML = `${jsonUser.nome} ( ${jsonUser.racf} )`;
    document.getElementById("imgUser").innerHTML = `<img src ="${jsonUser.linkFoto}">`;



// Como verificar se o componente Checkbox está marcado

let cxagencia = document.getElementById("cx_agencia").checked;

if (cxagencia == true) {

}


// Como inserir a data atual no componente de data e limitar a data mínima


    let amanha = new Date();

    amanha.setDate(amanha.getDate() + 1);

    let dia = amanha.getDate();
    let mes = amanha.getMonth() + 1; //jan = 0
    let ano = amanha.getFullYear();
    let minimo = ano + "-" + mes + "-" + dia;

    document.getElementById("dataAgenda").setAttribute("min", minimo);
    document.getElementById("dataAgenda").value = minimo;

/* js */

let data = document.getElementById("dataAgenda").value; 

data = new Date(data);

data.setDate(data.getDate() + 1); //soma 1 no dia

let dataConv = (data.getDate().toString().padStart(2, '0') + "/" + 
(data.getMonth() + 1).toString().padStart(2, '0') + "/" + data.getFullYear());

agendamento={
    datAgendamento: dataConv
}


//* Controller */

@PostMapping("/data")
public List<Agendamento> filtrarData(@RequestBody Agendamento agendamento){
    DateTimeFormatter fmt = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    LocalDate data = LocalDate.parse(agendamento.getDataAgendamento().toString(), fmt);
    return dao.findAllByDataAgendamento(data);
}


/*** Agendamento.java */

@Column(name="data_agendamento")
@JsonFormat(pattern="dd/MM/yyyy")
private LocalDate dataAgendamento;



ADRIANA 2

package br.itau.insiders.dao;

import java.time.LocalDate;
import java.util.List;

import org.springframework.data.repository.CrudRepository;

import br.itau.insiders.model.Agencia;
import br.itau.insiders.model.Agendamento;

public interface AgendamentoDAO extends CrudRepository<Agendamento, Integer> {
    
    public List<Agendamento> findByNomeCliente(String nomeCliente);
    public List<Agendamento> findByDataAgendamento(LocalDate dataAgendamento);
    public List<Agendamento> findByAgencia(Agencia agencia);

    public List<Agendamento> findByAgenciaAndDataAgendamento(Agencia agencia, LocalDate dataAgendamento);

    public List<Agendamento> findByNomeClienteAndDataAgendamento(String nomeCliente, LocalDate dataAgendamento);
    public List<Agendamento> findByNomeClienteAndAgencia(String nomeCliente, Agencia agencia);
    public List<Agendamento> findByNomeClienteAndAgenciaAndDataAgendamento(String nomeCliente, Agencia agencia, LocalDate dataAgendamento);

    public List<Agendamento> findByDataAgendamentoGreaterThanEqualOrderByDataAgendamento(LocalDate dataAgendamento);
}
